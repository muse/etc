# !/usr/bin/env bash
# Email: <mvdw at airmail dot cc>
#
# Description:
# $ join_head [delimiter] ...
# $ join_tail [delimiter] ...
# $ join_body [delimiter] ...
# $ join_wrap [left] [right] ...
# Join all the arguments beyond the delimiter with the delimiter.
#
# Examples:
#   $ join_tail __ a b c            #=> a__b__c__
#   $ join_tail / var log           #=> var/log/
#   $ join_head __ a b c            #=> __a__b__c
#   $ join_head / var log           #=> /var/log
#   $ join_body __ a b c            #=> a__b__c
#   $ join_body / var log           #=> var/log
#   $ join_wrap _ - a b c           #=> _a-_b-_c-
#   $ join_wrap '(' ')' var log     #=> (var)(log)
#
join_tail() { printf "%s$1" "${@:2}" && echo; }
join_head() { printf "$1%s" "${@:2}" && echo; }
join_body() { join_head "$@" | cut -c $((${#1} + 1))-; }
join_wrap() { printf "$1%s$2" "${@:3}" && echo; }

# $ address [in|out] [interface]
# Display your internal or external ip address.
#
# Examples:
#   $ address in en0                #=> 192.168...
#   $ address in                    #=> 192.168...
#   $ address out                   #=> 109.201...
#
address() {
    case "$1" in
        out) curl 'icanhazip.com' ;;
        in)
            case $(uname) in
                Linux|*)
                    # This $2 is in awk.
                    ip addr show | awk '/inet.*global/{print $2}' ;;
                Darwin)
                    ipconfig getifaddr "${2:-en0}" ;;
            esac ;;
        *)
            echo "?" ;;
    esac
}

# $ man
# Enhance the manual.
#
man() {
    env \
        LESS_TERMCAP_so="$(printf "\e[1;44;31m")" \
        LESS_TERMCAP_mb="$(printf "\e[1;31m")" \
        LESS_TERMCAP_md="$(printf "\e[1;31m")" \
        LESS_TERMCAP_us="$(printf "\e[1;32m")" \
        LESS_TERMCAP_me="$(printf "\e[0m")" \
        LESS_TERMCAP_se="$(printf "\e[0m")" \
        LESS_TERMCAP_ue="$(printf "\e[0m")" \
        man "$@"
}

# $ timestamp
# Generate a readable timestamp format for the current time.
#
# Examples:
#   $ timestamp                     #=> 2018-07-18 19:37
#   $ timestamp unix                #=> 20180718193700
timestamp()  {
    case "$1" in
        unix) date +"%Y%m%d%H%M%S" ;;
           *) date +"%F %H:%M" ;;
    esac
}

# $ clip
# Strip any line breaks from stdin and send it to the assigned clipboard application
#
# Examples:
#   $ echo "Hello world!" | clip    #=> 0
#   $ clip <<< "Hello world!"       #=> 0
function clip {
    tr -d "\n" | case $(uname) in
        Linux)    xclip -selection CLIPBOARD ;;
        Darwin|*) pbcopy ;;
    esac
}

# $ intercept
# Intercept a stream (stdin) and send this to multiple processes.
#
# Examples:
#   $ echo "?" | intercept "cat"    #=> "?\n?"
#   $ intercept "cat" <<< "Hello"   #=> "Hello\nHello"
#   $ intercept \
#       "sed 's/e/a' 1>&3" \
#           <<< "Bye" \
#       3>&1                        #=> "Bye\nBya"
#
intercept() {
    # This is down for a rewrite for sure, wanted a working example for now though.
    eval "tee $(join_wrap ">(" ") " "$@")"
}

# $ latest [directory|.]
# Show the latest file in the directory.
#
function latest {
    command ls -1 ${1:-.} | sort -k1 | tail -1
}

# $ secret [length] [characters]
# Generate a password/key/token by reading from /dev/urandom.
#
# Examples:
#   $ secret 64                     #=> [evUIBqPq4io5>X/ohCjRC[eJHu:}n>Xa|YTpH`:W@y3y+}X,R0X)hb*nFQ38]KC
#   $ secret 32 _-,.~\'\`           #=> `'',~-,_~,,~,.`_`_.'`~-,,_-','-~
#   $ secret 6 [0-9][A-F]           #=> F2E476
#
function secret {
    LC_CTYPE=C \
        tr -dc "${2:-"!'\"#$%&()*+,-./:;<=>?@[0-9A-Za-z][\]^_\`{|"}" \
        < /dev/urandom \
        | head -c "${1-8}" \
        | xargs -0
}

# $ ix [file]
# Send a stream of text or upload a file to http://ix.io.
# It optionally reads a .netrc file from ~, the format for this can be found
# on the curl manual under 'netrc'.
#
# Examples:
#   $ echo "Hello world!" | ix      #=> http://ix.io/...
#   $ ix <<< "Hello world!"         #=> http://ix.io/...
#   $ ix hello.c                    #=> http://ix.io/...
#
ix() {
    # TODO: Rewrite.
    if [[ -n "$1" ]]; then
        BODY="$(< "$1")"
    else
        BODY="$(cat)"
    fi
    if [[ $(wc -c <<< "$BODY" | sed 's/^ *//') -gt 0 ]]; then
        curl -\# --netrc-optional -F 'f:=<-' ix.io <<< "$BODY" | intercept "clip"
    fi
    unset BODY
}

d() {
    diff -BEby "$1" "$2" | nl | pr | less
}

choose-prae() {
  prae list | choose
}

